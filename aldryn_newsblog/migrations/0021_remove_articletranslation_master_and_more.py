# Generated by Django 5.2.3 on 2025-06-15 06:52

import aldryn_apphooks_config.fields
import aldryn_categories.fields
import aldryn_translation_tools.models
import cms.models.fields
import django.db.models.deletion
import djangocms_text.fields
import filer.fields.image
import parler.fields
import parler.models
import sortedm2m.fields
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        # Adjusted to match the latest migrations available in the installed
        # versions of the related packages. This resolves missing node errors
        # during migration graph generation.
        ('aldryn_categories', '0005_alter_category_id_alter_categorytranslation_id_and_more'),
        ('aldryn_newsblog', '0020_alter_article_id_alter_articletranslation_id_and_more'),
        ('aldryn_people', '0019_alter_group_id_alter_grouptranslation_id_and_more'),
        ('cms', '0035_auto_20230822_2208_squashed_0036_auto_20240311_1028'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        # migrations.RemoveField(
        #     model_name='articletranslation',
        #     name='master',
        # ),
        # migrations.AlterUniqueTogether(
        #     name='articletranslation',
        #     unique_together=None,
        # ),
        migrations.AlterField(
            model_name='newsblogconfig',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='newsblogconfigtranslation',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='serial',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='ArticleContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_featured', models.BooleanField(db_index=True, default=False, verbose_name='is featured')),
                ('categories', aldryn_categories.fields.CategoryManyToManyField(blank=True, to='aldryn_categories.category', verbose_name='categories')),
                ('content', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newsblog_article_content', slotname='newsblog_article_content', to='cms.placeholder')),
                ('featured_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL, verbose_name='featured image')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-article_grouper__pk'],
            },
            bases=(aldryn_translation_tools.models.TranslatedAutoSlugifyMixin, aldryn_translation_tools.models.TranslationHelperMixin, parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArticleContentTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=234, verbose_name='title')),
                ('slug', models.SlugField(blank=True, help_text='Used in the URL. If changed, the URL will change. Clear it to have it re-created automatically.', max_length=255, unique=True, verbose_name='slug')),
                ('lead_in', djangocms_text.fields.HTMLField(blank=True, default='', help_text='The lead gives the reader the main idea of the story, this is useful in overviews, lists or as an introduction to your article.', verbose_name='lead')),
                ('meta_title', models.CharField(blank=True, default='', max_length=255, verbose_name='meta title')),
                ('meta_description', models.TextField(blank=True, default='', verbose_name='meta description')),
                ('meta_keywords', models.TextField(blank=True, default='', verbose_name='meta keywords')),
                ('search_data', models.TextField(blank=True, editable=False)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='aldryn_newsblog.articlecontent')),
            ],
            options={
                'verbose_name': 'article content Translation',
                'db_table': 'aldryn_newsblog_articlecontent_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArticleGrouper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode', models.PositiveIntegerField(default=1, verbose_name='Episode')),
                ('app_config', aldryn_apphooks_config.fields.AppHookConfigField(help_text='When selecting a value, the form is reloaded to get the updated default', on_delete=django.db.models.deletion.CASCADE, to='aldryn_newsblog.newsblogconfig', verbose_name='Section')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='aldryn_people.person', verbose_name='author')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('serial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='aldryn_newsblog.serial', verbose_name='Serial')),
            ],
        ),
        migrations.AddField(
            model_name='articlecontent',
            name='article_grouper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='aldryn_newsblog.articlegrouper'),
        ),
        migrations.AddField(
            model_name='articlecontent',
            name='related',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='aldryn_newsblog.articlegrouper', verbose_name='related articles'),
        ),
        migrations.DeleteModel(
            name='Article',
        ),
        migrations.DeleteModel(
            name='ArticleTranslation',
        ),
    ]
